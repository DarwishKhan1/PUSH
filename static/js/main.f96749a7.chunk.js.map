{"version":3,"sources":["Components/Navbar/Navbar.js","Components/Home/Home.js","Components/FirebaseConfig/firebaseConfig.js","Utils/utility.js","Components/Meditation/MeditationForm.js","Components/Videos/PointForm.js","Components/Videos/videosForm.js","Components/Mindset/MindSetForm.js","Components/WaterMark/watermark.js","Components/Profile/profile.js","App.js","index.js"],"names":["Navbar","props","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","aria-haspopup","aria-labelledby","Home","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","extractImageFileExtensionFromBase64","base64Data","substring","indexOf","MeditationForm","category","params","useState","progress","setProgress","title","description","meditationForm","setMeditationForm","audioUrl","setAudioUrl","imageUrl","setImageUrl","file","setFile","image","setImage","aspect","unit","width","height","crop","setCrop","onchange","e","target","name","value","max","style","src","onImageLoaded","onChange","onClick","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","x","y","fileExtension","myFileName","cropFile","toDataURL","alert","onSubmit","preventDefault","audioStorageRef","firebaseDb","storage","ref","child","imageStorageRef","put","on","snapshot","prog","Math","round","bytesTransferred","totalBytes","err","console","log","getDownloadURL","then","imgUrl","data","audio_url","image_url","firestore","collection","doc","set","res","onsubmit","htmlFor","files","AudioFileHandler","placeholder","accept","required","URL","createObjectURL","imgFileHandler","PointForm","points","setPoints","pointid","setPointId","sub_title","point","setPoint","onPointChange","getPoints","get","pointsList","forEach","push","useEffect","scope","map","pnt","key","catch","delete","data-dismiss","onPointSubmit","VideosForm","setTitle","videoSrc","setVideoSrc","videoUrl","setVideoUrl","autoPlay","controls","storageRef","url","video_url","documentRef","i","result","onSubmitVideo","fileHandler","MindSetForm","mindsetForm","setMindsetForm","imgSrc","setImgSrc","uploaded","setUploaded","snapshopt","Watermark","textwatermark","setAttribute","Profile","App","exact","path","component","HomeComponent","videosForm","WaterMark","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f96749a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n  const Happiness = \"Happiness\";\r\n  const Health = \"Health\";\r\n  const Wise = \"Wise\";\r\n  const breath_work = \"breath_work\";\r\n  const challenges = \"challenges\";\r\n  const exercise = \"exercise\";\r\n  const mobility = \"mobility\";\r\n  const motivation = \"motivation\";\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand ml-5 \" to=\"/\">\r\n        PUSH\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNavDropdown\"\r\n        aria-controls=\"navbarNavDropdown\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n        <ul className=\"navbar-nav ml-auto mr-5 pr-3 text-center\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/watermarks`}>\r\n              WaterMarks\r\n            </Link>\r\n          </li>{\" \"}\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/profile`}>\r\n              Profile\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to={`/mindset`}>\r\n              MindSet\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item dropdown pl-2\">\r\n            <a\r\n              className=\"nav-link dropdown-toggle\"\r\n              href=\"#\"\r\n              id=\"navbarDropdownMenuLink\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Meditation\r\n            </a>\r\n            <div\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"navbarDropdownMenuLink\"\r\n            >\r\n              <Link className=\"dropdown-item\" to={`/meditation/${Health}`}>\r\n                Health\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to={`/meditation/${Happiness}`}>\r\n                Happiness\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to={`/meditation/${Wise}`}>\r\n                Wise\r\n              </Link>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item dropdown pl-2\">\r\n            <a\r\n              className=\"nav-link dropdown-toggle\"\r\n              href=\"#\"\r\n              id=\"navbarDropdownMenuLink1\"\r\n              data-toggle=\"dropdown\"\r\n              aria-haspopup=\"true\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              Vidoes\r\n            </a>\r\n            <div\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"navbarDropdownMenuLink1\"\r\n            >\r\n              <Link className=\"dropdown-item\" to={`/videos/${breath_work}`}>\r\n                Breath Work\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to={`/videos/${challenges}`}>\r\n                Challenges\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to={`/videos/${exercise}`}>\r\n                Exercise\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to={`/videos/${mobility}`}>\r\n                Mobility\r\n              </Link>\r\n              <Link className=\"dropdown-item\" to={`/videos/${motivation}`}>\r\n                Motivation\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Home = props => {\r\n    return (\r\n        <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">PUSH</h1>\r\n                <p className=\"lead\">\r\n                  Powered By\r\n                </p>\r\n                <p className=\"lead\">\r\n                  SWEAT ELITE ATHLETICS\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nHome.propTypes = {\r\n\r\n}\r\n\r\nexport default Home\r\n","import * as firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCSqAcbx9U__h1S1v-FDOA_EWLpCQNN_Ik\",\r\n    authDomain: \"push-47228.firebaseapp.com\",\r\n    databaseURL: \"https://push-47228.firebaseio.com\",\r\n    projectId: \"push-47228\",\r\n    storageBucket: \"push-47228.appspot.com\",\r\n    messagingSenderId: \"704969393456\",\r\n    appId: \"1:704969393456:web:47165829c8b99b1b2df4f5\"\r\n};\r\n\r\n// Initialize Firebase\r\nexport default firebase.initializeApp(firebaseConfig);","// A few JavaScript Functions for Images and Files\r\n// Author: Justin Mitchel\r\n// Source: https://kirr.co/ndywes\r\n\r\n// Convert a Base64-encoded string to a File object\r\nexport function base64StringtoFile (base64String, filename) {\r\n    var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n)\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n)\r\n    }\r\n    return new File([u8arr], filename, {type: mime})\r\n  }\r\n  \r\n  // Download a Base64-encoded file\r\n  \r\n  export function downloadBase64File (base64Data, filename) {\r\n    var element = document.createElement('a')\r\n    element.setAttribute('href', base64Data)\r\n    element.setAttribute('download', filename)\r\n    element.style.display = 'none'\r\n    document.body.appendChild(element)\r\n    element.click()\r\n    document.body.removeChild(element)\r\n  }\r\n  \r\n  // Extract an Base64 Image's File Extension\r\n  export function extractImageFileExtensionFromBase64 (base64Data) {\r\n    return base64Data.substring('data:image/'.length, base64Data.indexOf(';base64'))\r\n  }\r\n  \r\n  // Base64 Image to Canvas with a Crop\r\n  export function image64toCanvasRef (canvasRef, image64, pixelCrop) {\r\n    const canvas = canvasRef // document.createElement('canvas');\r\n    canvas.width = pixelCrop.width\r\n    canvas.height = pixelCrop.height\r\n    const ctx = canvas.getContext('2d')\r\n    const image = new Image()\r\n    image.src = image64\r\n    image.onload = function () {\r\n      ctx.drawImage(\r\n        image,\r\n        pixelCrop.x,\r\n        pixelCrop.y,\r\n        pixelCrop.width,\r\n        pixelCrop.height,\r\n        0,\r\n        0,\r\n        pixelCrop.width,\r\n        pixelCrop.height\r\n      )\r\n    }\r\n  }","import React, { useState } from \"react\";\r\nimport firebaseDb from \"../FirebaseConfig/firebaseConfig\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport {\r\n  base64StringtoFile,\r\n  extractImageFileExtensionFromBase64,\r\n} from \"../../Utils/utility\";\r\n\r\nconst MeditationForm = (props) => {\r\n  const category = props.match.params.category;\r\n  const [progress, setProgress] = useState(0);\r\n  const [meditationForm, setMeditationForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [audioUrl, setAudioUrl] = useState(null);\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n\r\n  const [file, setFile] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [crop, setCrop] = useState({\r\n    aspect: 1 / 2,\r\n    unit: \"%\",\r\n    width: 25,\r\n    height: 50,\r\n  });\r\n\r\n  const AudioFileHandler = (e) => {\r\n    setAudioUrl(e.target.files[0]);\r\n  };\r\n\r\n  const imgFileHandler = (e) => {\r\n    setImageUrl(URL.createObjectURL(e.target.files[0]));\r\n  };\r\n\r\n  const onchange = (e) => {\r\n    setMeditationForm({\r\n      ...meditationForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  function getCroppedImg() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const fileExtension = extractImageFileExtensionFromBase64(imageUrl);\r\n    const myFileName = \"preview.\" + fileExtension;\r\n    const base64Image = canvas.toDataURL(\"image/\" + fileExtension);\r\n    const cropFile = base64StringtoFile(base64Image, myFileName);\r\n    setFile(cropFile);\r\n    alert(\"Image is Cropped\");\r\n  }\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const audioStorageRef = firebaseDb\r\n      .storage()\r\n      .ref()\r\n      .child(`audio/meditation_${category}`);\r\n    const imageStorageRef = firebaseDb\r\n      .storage()\r\n      .ref()\r\n      .child(`images/meditation_${category}`);\r\n  \r\n      if (file) {\r\n        const uploadTask = audioStorageRef.put(audioUrl);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const prog = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            setProgress(prog);\r\n          },\r\n          (err) => {\r\n            console.log(err);\r\n          },\r\n          () => {\r\n            audioStorageRef.getDownloadURL().then((audioUrl) => {\r\n              const uploadTask1 = imageStorageRef.put(file);\r\n    \r\n              uploadTask1.on(\r\n                \"state_changed\",\r\n                (snapshot) => {},\r\n                (err) => {\r\n                  console.log(err);\r\n                },\r\n                () => {\r\n                  imageStorageRef.getDownloadURL().then((imgUrl) => {\r\n                    const data = {\r\n                      title: meditationForm.title,\r\n                      description: meditationForm.description,\r\n                      audio_url: audioUrl,\r\n                      image_url: imgUrl,\r\n                      category: category,\r\n                    };\r\n    \r\n                    const documentRef = firebaseDb\r\n                      .firestore()\r\n                      .collection(\"meditation\")\r\n                      .doc(category);\r\n                    documentRef.set(data).then((res) => {\r\n                      alert(\"Data is Uploaded Succesfully\");\r\n                      setMeditationForm({\r\n                        title: \"\",\r\n                        description: \"\",\r\n                      });\r\n                      setAudioUrl(null);\r\n                      setImageUrl(null);\r\n                    });\r\n                  });\r\n                }\r\n              );\r\n            });\r\n          }\r\n        );\r\n      }else{\r\n        alert(\"Please Crop Image\")\r\n      }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto mt-2 control-width\">\r\n      <div className=\"text-center\">\r\n        <h1>Meditation {category}</h1>\r\n        <progress value={progress} max=\"100\" style={{ width: \"100%\" }} />\r\n        {imageUrl && (\r\n          <div>\r\n            <ReactCrop\r\n              src={imageUrl}\r\n              onImageLoaded={setImage}\r\n              crop={crop}\r\n              onChange={setCrop}\r\n            />\r\n            <button\r\n              onClick={getCroppedImg}\r\n              className=\"btn btn-secondary btn-block my-2\"\r\n            >\r\n              Crop Image{\" \"}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <form\r\n        onSubmit={(e) => {\r\n          onsubmit(e);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"selectvideo\" className=\"h6\">\r\n            Select Audio\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            id=\"selectvideo\"\r\n            onChange={(e) => AudioFileHandler(e)}\r\n            placeholder=\"Select  Video\"\r\n            accept=\"audio/*\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\" className=\"h6\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={meditationForm.title || \"\"}\r\n            onChange={(e) => onchange(e)}\r\n            placeholder=\"Select Title\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\" className=\"h6\">\r\n            Description\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"description\"\r\n            value={meditationForm.description || \"\"}\r\n            onChange={(e) => onchange(e)}\r\n            placeholder=\"Description\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"selectImage\" className=\"h6\">\r\n            Select Image\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            id=\"selectImage\"\r\n            onChange={(e) => imgFileHandler(e)}\r\n            placeholder=\"Select  Video\"\r\n            accept=\"image/*\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-secondary btn-block\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default MeditationForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport firebaseDb from \"../FirebaseConfig/firebaseConfig\";\r\n\r\nconst PointForm = ({ category }) => {\r\n  const [points, setPoints] = useState(null);\r\n  const [pointid, setPointId] = useState(null);\r\n  const [point, setPoint] = useState({\r\n    title: \"\",\r\n    sub_title: \"\",\r\n    id: \"\"\r\n  });\r\n\r\n  const onPointChange = (e) => {\r\n    setPoint({ ...point, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onPointSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const documentRef = firebaseDb\r\n    .firestore()\r\n    .collection(\"videos\")\r\n    .doc(category)\r\n    .collection(\"points_data\")\r\n    .doc(pointid);\r\n\r\n    documentRef.set(point).then(res => {\r\n        getPoints();\r\n        alert(\"Edited Successfully\")\r\n    })\r\n    .catch(err => {\r\n        alert(err)\r\n    })\r\n\r\n    setPoint({\r\n      title: \"\",\r\n      sub_title: \"\",\r\n      id:\"\"\r\n    });\r\n  };\r\n\r\n  const getPoints = () => {\r\n    const documentRef = firebaseDb\r\n      .firestore()\r\n      .collection(\"videos\")\r\n      .doc(category)\r\n      .collection(\"points_data\");\r\n\r\n    documentRef.get().then((snapshot) => {\r\n      const pointsList = [];\r\n      snapshot.forEach((doc) => {\r\n        pointsList.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setPoints(pointsList);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getPoints();\r\n  }, [category]);\r\n\r\n  const deletePoint = (id) => {\r\n    const documentRef = firebaseDb\r\n      .firestore()\r\n      .collection(\"videos\")\r\n      .doc(category)\r\n      .collection(\"points_data\")\r\n      .doc(id);\r\n    documentRef\r\n      .delete()\r\n      .then((res) => {\r\n        getPoints();\r\n        alert(\"Point is Deleted!\");\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  const pointEdit = (id) => {\r\n    const documentRef = firebaseDb\r\n      .firestore()\r\n      .collection(\"videos\")\r\n      .doc(category)\r\n      .collection(\"points_data\")\r\n      .doc(id);\r\n    documentRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        setPoint({\r\n            title: snapshot.data().title,\r\n            sub_title: snapshot.data().sub_title,\r\n        });\r\n        setPointId(id)\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n  };\r\n\r\n  return !points ? (\r\n    <h6>Wait</h6>\r\n  ) : points.length > 0 ? (\r\n    <div>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Title</th>\r\n            <th scope=\"col\">Description</th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {points.map((pnt) => {\r\n            return (\r\n              <tr key={pnt.id}>\r\n                <td>{pnt.title}</td>\r\n                <td>{pnt.sub_title}</td>\r\n                <td>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => pointEdit(pnt.id)}\r\n                    data-toggle=\"modal\"\r\n                    data-target=\"#myModalEdit\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => deletePoint(pnt.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"modal\" id=\"myModalEdit\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Edit Point</h4>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={(e) => onPointSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    value={point.title}\r\n                    onChange={(e) => onPointChange(e)}\r\n                    placeholder=\"Select Title\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"description\"\r\n                    name=\"sub_title\"\r\n                    value={point.sub_title}\r\n                    onChange={(e) => onPointChange(e)}\r\n                    placeholder=\"Description\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-secondary btn-block\">\r\n                  Edit Point\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h6>There is no points</h6>\r\n  );\r\n};\r\n\r\nPointForm.propTypes = {};\r\n\r\nexport default PointForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebaseDb from \"../FirebaseConfig/firebaseConfig\";\r\nimport PointForm from './PointForm'\r\n\r\nconst VideosForm = (props) => {\r\n  const category = props.match.params.category;\r\n  const [progress, setProgress] = useState(0);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [videoSrc, setVideoSrc] = useState(null);\r\n  const [videoUrl, setVideoUrl] = useState(null);\r\n  const [point, setPoint] = useState({\r\n    title: \"\",\r\n    sub_title: \"\",\r\n  });\r\n  const [points, setPoints] = useState([]);\r\n\r\n  const fileHandler = (e) => {\r\n    setVideoSrc(URL.createObjectURL(e.target.files[0]));\r\n    setVideoUrl(e.target.files[0]);\r\n  };\r\n\r\n  const onPointChange = (e) => {\r\n    setPoint({ ...point, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onPointSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    points.push(point);\r\n    alert(\"Succesfully Added\");\r\n\r\n    setPoint({\r\n      title: \"\",\r\n      sub_title: \"\",\r\n    });\r\n  };\r\n\r\n  const onchange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  const onSubmitVideo = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (points.length > 0) {\r\n      const storageRef = firebaseDb.storage().ref().child(`videos/${category}`);\r\n      const uploadTask = storageRef.put(videoUrl);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const prog = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setProgress(prog);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          storageRef.getDownloadURL().then((url) => {\r\n            const data = {\r\n              title: title,\r\n              video_url: url,\r\n            };\r\n\r\n            const documentRef = firebaseDb\r\n              .firestore()\r\n              .collection(\"videos\")\r\n              .doc(category);\r\n            documentRef.set(data).then((res) => {\r\n              for (let i = 0; i < points.length; i++) {\r\n                documentRef\r\n                  .collection(\"points_data\")\r\n                  .doc(i + \"\")\r\n                  .set(points[i])\r\n                  .then((result) => {});\r\n              }\r\n\r\n              alert(\"Data is Uploaded Succesfully\");\r\n              setTitle(\"\");\r\n              setVideoSrc(null);\r\n              setVideoUrl(null);\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Please Add some Points\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto mt-2 control-width\">\r\n      <div className=\"text-center\">\r\n        <h1>{category}</h1>\r\n        <progress value={progress} max=\"100\" style={{ width: \"100%\" }} />\r\n      </div>\r\n      <video width=\"100%\" height=\"80%\" autoPlay controls>\r\n        {videoSrc && <source src={videoSrc} type=\"video/mp4\" />}\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <form\r\n        onSubmit={(e) => {\r\n          onSubmitVideo(e);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"selectvideo\">Select Video</label>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            id=\"selectvideo\"\r\n            onChange={(e) => fileHandler(e)}\r\n            placeholder=\"Select Video\"\r\n            accept=\"video/*\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={title || \"\"}\r\n            onChange={(e) => onchange(e)}\r\n            placeholder=\"Select Title\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-block\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#myModal\"\r\n        >\r\n          Add Point\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn-secondary btn-block\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"modal\" id=\"myModal\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Add Point</h4>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={(e) => onPointSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    value={point.title || \"\"}\r\n                    onChange={(e) => onPointChange(e)}\r\n                    placeholder=\"Select Title\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"description\"\r\n                    name=\"sub_title\"\r\n                    value={point.sub_title || \"\"}\r\n                    onChange={(e) => onPointChange(e)}\r\n                    placeholder=\"Description\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-secondary btn-block\">\r\n                  Save Point\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <h2 className=\"text-center my-3\">Points</h2>\r\n     \r\n      <PointForm  category={category}/>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideosForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebaseDb from \"../FirebaseConfig/firebaseConfig\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport {\r\n  base64StringtoFile,\r\n  extractImageFileExtensionFromBase64,\r\n} from \"../../Utils/utility\";\r\n\r\nconst MindSetForm = (props) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [mindsetForm, setMindsetForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [point, setPoint] = useState({\r\n    title: \"\",\r\n    sub_title: \"\",\r\n  });\r\n  const [points, setPoints] = useState([]);\r\n  const [file, setFile] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [crop, setCrop] = useState({\r\n    aspect: 1 / 2,\r\n    unit: \"%\",\r\n    width: 25,\r\n    height: 50,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const documentRef = firebaseDb\r\n      .firestore()\r\n      .collection(\"mindset\")\r\n      .doc(\"mindset\");\r\n    documentRef.get().then((snapshopt) => {\r\n      if (snapshopt.data()) {\r\n        setImgSrc(snapshopt.data().image_url);\r\n        setUploaded(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const fileHandler = (e) => {\r\n    setImgSrc(URL.createObjectURL(e.target.files[0]));\r\n    setUploaded(false);\r\n  };\r\n\r\n  const onPointChange = (e) => {\r\n    setPoint({ ...point, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onPointSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    points.push(point);\r\n    alert(\"Succesfully Added\");\r\n\r\n    setPoint({\r\n      title: \"\",\r\n      sub_title: \"\",\r\n    });\r\n  };\r\n\r\n  const onchange = (e) => {\r\n    setMindsetForm({\r\n      ...mindsetForm,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  function getCroppedImg() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const fileExtension = extractImageFileExtensionFromBase64(imgSrc);\r\n    const myFileName = \"preview.\" + fileExtension;\r\n    const base64Image = canvas.toDataURL(\"image/\" + fileExtension);\r\n    const cropFile = base64StringtoFile(base64Image, myFileName);\r\n    setFile(cropFile);\r\n    alert(\"Image is Cropped\");\r\n  }\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (file) {\r\n      const storageRef = firebaseDb.storage().ref().child(`Images/mindset`);\r\n      const uploadTask = storageRef.put(file);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const prog = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setProgress(prog);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          storageRef.getDownloadURL().then((url) => {\r\n            const data = {\r\n              title: mindsetForm.title,\r\n              description: mindsetForm.description,\r\n              image_url: url,\r\n            };\r\n\r\n            const documentRef = firebaseDb\r\n              .firestore()\r\n              .collection(\"mindset\")\r\n              .doc(\"mindset\");\r\n            documentRef.set(data).then((res) => {\r\n              alert(\"Data is Uploaded Succesfully\");\r\n              setMindsetForm({\r\n                title: \"\",\r\n                description: \"\",\r\n              });\r\n\r\n              setImgSrc(url);\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n        const data = {\r\n          title: mindsetForm.title,\r\n          description: mindsetForm.description,\r\n          image_url: imgSrc,\r\n        };\r\n\r\n        const documentRef = firebaseDb\r\n          .firestore()\r\n          .collection(\"mindset\")\r\n          .doc(\"mindset\");\r\n        documentRef.set(data).then((res) => {\r\n          alert(\"Data is Uploaded Succesfully\");\r\n          setMindsetForm({\r\n            title: \"\",\r\n            description: \"\",\r\n          });\r\n          setImgSrc(imgSrc);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto mt-2 control-width\">\r\n      <div className=\"text-center\">\r\n        <h1>MindSet</h1>\r\n        <progress value={progress} max=\"100\" style={{ width: \"100%\" }} />\r\n        {imgSrc && (\r\n          <div>\r\n            {uploaded ? (\r\n              <img src={imgSrc} />\r\n            ) : (\r\n              <div>\r\n                <ReactCrop\r\n                  src={imgSrc}\r\n                  onImageLoaded={setImage}\r\n                  crop={crop}\r\n                  onChange={setCrop}\r\n                />\r\n                <button\r\n                  onClick={getCroppedImg}\r\n                  className=\"btn btn-secondary btn-block my-2\"\r\n                >\r\n                  Crop Image{\" \"}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          onsubmit(e);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"selectvideo\" className=\"h6\">\r\n            Select Image\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            id=\"selectvideo\"\r\n            onChange={(e) => fileHandler(e)}\r\n            placeholder=\"Select  Video\"\r\n            accept=\"image/*\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\" className=\"h6\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={mindsetForm.title || \"\"}\r\n            onChange={(e) => onchange(e)}\r\n            placeholder=\"Select Title\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\" className=\"h6\">\r\n            Description\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"description\"\r\n            value={mindsetForm.description || \"\"}\r\n            onChange={(e) => onchange(e)}\r\n            placeholder=\"Description\"\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secondary btn-block\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#myModal\"\r\n        >\r\n          Add Point\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn-secondary btn-block\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n\r\n      <div className=\"modal\" id=\"myModal\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h4 className=\"modal-title\">Add Point</h4>\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <form onSubmit={(e) => onPointSubmit(e)}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"title\">Title</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"title\"\r\n                    name=\"title\"\r\n                    value={point.title || \"\"}\r\n                    onChange={(e) => onPointChange(e)}\r\n                    placeholder=\"Select Title\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"description\">Description</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"description\"\r\n                    name=\"sub_title\"\r\n                    value={point.sub_title || \"\"}\r\n                    onChange={(e) => onPointChange(e)}\r\n                    placeholder=\"Description\"\r\n                    required\r\n                  />\r\n                </div>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-secondary btn-block my-3\"\r\n                >\r\n                  Save Point\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MindSetForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebaseDb from \"../FirebaseConfig/firebaseConfig\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport {\r\n  base64StringtoFile,\r\n  extractImageFileExtensionFromBase64,\r\n} from \"../../Utils/utility\";\r\n\r\nconst Watermark = (props) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [crop, setCrop] = useState({\r\n    aspect: 1 / 1,\r\n    unit: \"%\",\r\n    width: 25,\r\n    height: 50,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const documentRef = firebaseDb\r\n      .firestore()\r\n      .collection(\"Watermarks\")\r\n      .doc(\"1\");\r\n    documentRef.get().then((snapshot) => {\r\n      if (snapshot.data()) {\r\n        setTitle(snapshot.data().textwatermark);\r\n        setImgSrc(snapshot.data().image_url);\r\n        setUploaded(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const fileHandler = (e) => {\r\n    setImgSrc(URL.createObjectURL(e.target.files[0]));\r\n    setUploaded(false);\r\n  };\r\n\r\n  const onchange = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n\r\n  function getCroppedImg() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.setAttribute(\"crossorigin\", \"anonymous\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const fileExtension = extractImageFileExtensionFromBase64(imgSrc);\r\n    const myFileName = \"preview.\" + fileExtension;\r\n    const base64Image = canvas.toDataURL(\"image/\" + fileExtension);\r\n    const cropFile = base64StringtoFile(base64Image, myFileName);\r\n    setFile(cropFile);\r\n    alert(\"Image is Cropped\");\r\n  }\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      const storageRef = firebaseDb.storage().ref().child(`Images/watermarks`);\r\n      const uploadTask = storageRef.put(file);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const prog = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setProgress(prog);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          storageRef.getDownloadURL().then((url) => {\r\n            const data = {\r\n              textwatermark: title,\r\n              image_url: url,\r\n            };\r\n\r\n            const documentRef = firebaseDb\r\n              .firestore()\r\n              .collection(\"Watermarks\")\r\n              .doc(\"1\");\r\n            documentRef.set(data).then((res) => {\r\n              alert(\"Data is Uploaded Succesfully\");\r\n              setImgSrc(url);\r\n              setUploaded(true);\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      if (imgSrc !== null && uploaded) {\r\n        const data = {\r\n          textwatermark: title,\r\n          image_url: imgSrc,\r\n        };\r\n\r\n        const documentRef = firebaseDb\r\n          .firestore()\r\n          .collection(\"Watermarks\")\r\n          .doc(\"1\");\r\n        documentRef.set(data).then((res) => {\r\n          alert(\"Data is Uploaded Succesfully\");\r\n          setImgSrc(imgSrc);\r\n          setUploaded(true);\r\n        });\r\n      } else {\r\n        alert(\"Please Crop Image\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mx-auto mt-2 control-width\">\r\n      <div className=\"text-center\">\r\n        <h1>Watermark</h1>\r\n        <progress value={progress} max=\"100\" style={{ width: \"100%\" }} />\r\n        {imgSrc && (\r\n          <div>\r\n            {uploaded ? (\r\n              <img src={imgSrc} />\r\n            ) : (\r\n              <div>\r\n                <ReactCrop\r\n                  src={imgSrc}\r\n                  onImageLoaded={setImage}\r\n                  crop={crop}\r\n                  onChange={setCrop}\r\n                />\r\n                <button\r\n                  onClick={getCroppedImg}\r\n                  className=\"btn btn-secondary btn-block my-2\"\r\n                >\r\n                  Crop Image{\" \"}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          onsubmit(e);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"selectvideo\" className=\"h6\">\r\n            Select Image\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            id=\"selectvideo\"\r\n            onChange={(e) => fileHandler(e)}\r\n            placeholder=\"Select  Image\"\r\n            accept=\"image/*\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\" className=\"h6\">\r\n            Title\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={title || \"\"}\r\n            onChange={(e) => onchange(e)}\r\n            placeholder=\"Select Title\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-secondary btn-block\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Watermark;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebaseDb from \"../FirebaseConfig/firebaseConfig\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\nimport {\r\n  base64StringtoFile,\r\n  extractImageFileExtensionFromBase64,\r\n} from \"../../Utils/utility\";\r\n\r\nconst Profile = (props) => {\r\n  const [progress, setProgress] = useState(0);\r\n  const [imgSrc, setImgSrc] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [uploaded, setUploaded] = useState(false);\r\n  const [crop, setCrop] = useState({\r\n    aspect: 1 / 1,\r\n    unit: \"%\",\r\n    width: 25,\r\n    height: 50,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const documentRef = firebaseDb\r\n      .firestore()\r\n      .collection(\"name_bg_image\")\r\n      .doc(\"name_bg_image\");\r\n    documentRef.get().then((snapshot) => {\r\n      if (snapshot.data()) {\r\n        setImgSrc(snapshot.data().image_url);\r\n        setUploaded(true);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const fileHandler = (e) => {\r\n    setImgSrc(URL.createObjectURL(e.target.files[0]));\r\n    setUploaded(false);\r\n  };\r\n\r\n\r\n  function getCroppedImg() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.setAttribute(\"crossorigin\", \"anonymous\");\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    const fileExtension = extractImageFileExtensionFromBase64(imgSrc);\r\n    const myFileName = \"preview.\" + fileExtension;\r\n    const base64Image = canvas.toDataURL(\"image/\" + fileExtension);\r\n    const cropFile = base64StringtoFile(base64Image, myFileName);\r\n    setFile(cropFile);\r\n    alert(\"Image is Cropped\");\r\n  }\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n    if (file) {\r\n      const storageRef = firebaseDb.storage().ref().child(`Images/username_bg`);\r\n      const uploadTask = storageRef.put(file);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          const prog = Math.round(\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n          );\r\n          setProgress(prog);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        },\r\n        () => {\r\n          storageRef.getDownloadURL().then((url) => {\r\n            const data = {\r\n              image_url: url,\r\n            };\r\n\r\n            const documentRef = firebaseDb\r\n              .firestore()\r\n              .collection(\"name_bg_image\")\r\n              .doc(\"name_bg_image\");\r\n            documentRef.set(data).then((res) => {\r\n              alert(\"Data is Uploaded Succesfully\");\r\n              setImgSrc(url);\r\n              setUploaded(true);\r\n            });\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n        alert(\"Please Crop Image\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"mx-auto mt-2 control-width\">\r\n      <div className=\"text-center\">\r\n        <h1>Profile</h1>\r\n        <progress value={progress} max=\"100\" style={{ width: \"100%\" }} />\r\n        {imgSrc && (\r\n          <div>\r\n            {uploaded ? (\r\n              <img src={imgSrc} height=\"400px\"/>\r\n            ) : (\r\n              <div>\r\n                <ReactCrop\r\n                  src={imgSrc}\r\n                  onImageLoaded={setImage}\r\n                  crop={crop}\r\n                  onChange={setCrop}\r\n                />\r\n                <button\r\n                  onClick={getCroppedImg}\r\n                  className=\"btn btn-secondary btn-block my-2\"\r\n                >\r\n                  Crop Image{\" \"}\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <form\r\n        onSubmit={(e) => {\r\n          onsubmit(e);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"selectvideo\" className=\"h6\">\r\n            Select Image\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            id=\"selectvideo\"\r\n            onChange={(e) => fileHandler(e)}\r\n            placeholder=\"Select  Image\"\r\n            accept=\"image/*\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-secondary btn-block mb-3\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './Components/Navbar/Navbar'\nimport HomeComponent from './Components/Home/Home'\nimport MeditationForm from './Components/Meditation/MeditationForm'\nimport videosForm from './Components/Videos/videosForm'\nimport MindSetForm from './Components/Mindset/MindSetForm'\nimport WaterMark from './Components/WaterMark/watermark'\nimport Profile from './Components/Profile/profile'\n\nfunction App() {\n  return (\n   <Router>\n      <div>\n      <Navbar />\n      <Route exact path=\"/\" component={HomeComponent} />\n      <Route exact path=\"/meditation/:category\" component={MeditationForm} />\n      <Route exact path=\"/videos/:category\" component={videosForm} />\n      <Route exact path=\"/mindset\" component={MindSetForm} />\n      <Route exact path=\"/watermarks\" component={WaterMark} />\n      <Route exact path=\"/profile\" component={Profile} />\n    </div>\n   </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}